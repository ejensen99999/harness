pipeline:
  name: add_a_stage
  identifier: add_a_stage
  projectIdentifier: test
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: Minion
        build: <+input>
  stages:
    - stage:
        name: Build My Stuff
        identifier: Build_My_Stuff
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Echo
                  identifier: Echo
                  spec:
                    connectorRef: account.harnessImage
                    image: ubuntu:20.04
                    shell: <+input>
                    command: <+input>
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
        variables:
          - name: SOME_VALUE
            type: String
            description: ""
            value: "90"
    - stage:
        name: Custom Stage
        identifier: Custom_Stage
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformPlan
                  name: TerraformPlan_1
                  identifier: TerraformPlan_1
                  spec:
                    provisionerIdentifier: output
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          spec:
                            connectorRef: account.Github
                            repoName: minion
                            gitFetchType: Branch
                            branch: main
                            folderPath: test
                          type: Github
                      secretManagerRef: harnessSecretManager
                      skipRefreshCommand: false
                  timeout: 10m
        tags: {}
        failureStrategies:
          - onFailure:
              errors: []
              action:
                type: MarkAsFailure
